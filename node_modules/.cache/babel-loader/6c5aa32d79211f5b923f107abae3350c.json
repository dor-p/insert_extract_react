{"ast":null,"code":"import _classCallCheck from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dor/Desktop/insert_extract_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dor/Desktop/insert_extract_react/src/admin.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport Set from \"./set.js\";\nimport Select from \"react-select\";\nimport Modal from \"react-modal\";\n\nvar _require = require('uuid'),\n    uuidv1 = _require.v1; //require(\"./admin.scss\");\n\n\nexport var display_type = {\n  list: \"list\",\n  change: \"change\"\n};\nvar customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n/** Admin Class extends React.Component. To implement a CRUD interface similar to Django Admin you need to extend the Admin class. */\n\nvar Admin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n    _this.name = \"default\";\n    _this.name_plural = \"defaults\";\n    _this.live_search = false;\n    _this.field_transforms = {};\n    _this.header_transforms = {};\n    _this.extra_fields = {};\n    _this.list_display = [];\n    _this.list_display_links = [];\n    _this.list_per_page = 10;\n    _this.sort_fields = [];\n\n    _this.is_object_equal = function (a, b) {\n      return a == b;\n    };\n\n    _this.pages_in_pagination = 3;\n    _this.fetch_for_page = true;\n    _this.actions = {\n      delete: function _delete(selected_objects) {}\n    };\n    _this._change_uuid = uuidv1();\n    _this.queryset = [];\n    _this._all_selected = false;\n\n    if (props) {\n      _this.bind_exclude = props.bind_exclude ? props.bind_exclude : [];\n\n      _.keys(props).map(function (key) {\n        if (typeof props[key] == \"function\") {\n          if (_.includes(key, _this.bind_exclude)) {\n            _this[key] = props[key];\n\n            _this[key].bind(_assertThisInitialized(_assertThisInitialized(_this)));\n          }\n        } else {\n          _this[key] = props[key];\n        }\n      });\n    }\n    /**\n     * Initialize the state of the component\n     */\n\n\n    _this.state = {\n      display_type: display_type.list,\n      page_number: 1,\n      object: null,\n      selected_objects: new Set([], _this.is_object_equal),\n      total: 0,\n      filter_options: {},\n      filter_values: []\n    };\n    var queryset = _this.get_queryset(_this.state.page_number, _this.list_per_page, _this.state.queryset) ? _this.get_queryset(_this.state.page_number, _this.list_per_page, _this.state.queryset) : [];\n    _this.state.queryset = queryset;\n    _this.state.total = queryset.length;\n    _this._handle_search = _this._handle_search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._select_all = _this._select_all.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._select_one = _this._select_one.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.response_change = _this.response_change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.response_add = _this.response_add.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._clear = _this._clear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._check_all = React.createRef();\n    return _this;\n  }\n  /**\n   * This function clears selected filters and selected objects\n   * \n    */\n\n\n  _createClass(Admin, [{\n    key: \"_clear\",\n    value: function _clear() {\n      if (this._check_all) {\n        this._check_all.current.checked = false;\n        this._all_selected = false;\n      }\n\n      this.setState({\n        display_type: display_type.list,\n        page_number: 1,\n        selected_objects: new Set([], this.is_object_equal),\n        queryset: this.get_queryset(1, this.list_per_page, this.state.queryset),\n        filter_values: []\n      });\n    }\n    /**\n     * This function returns an array of objects that will serve as the\n     * queryset for the admin interface. Typically involves an HTTP request\n     * to a backend.\n     * @param {number} page_number - The current page number\n     * @param {number} list_per_page - Number items to list per page. Defaults to `list_per_page`\n     * @param {object[]} queryset - The current queryset\n     * @returns {object[]} An array of objects. - Objects to display\n     */\n\n  }, {\n    key: \"get_queryset\",\n    value: function get_queryset() {\n      var page_number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.page_number;\n      var list_per_page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.get_list_per_page();\n      var queryset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.queryset;\n      return this.queryset;\n    }\n    /**\n     * This functions returns a JSON Schema Form for editing\n     * the objects in the array returned by get_queryset(). This method needs to be overridden to\n     * so as to return a Form Component for the object.  Learn more on\n     * JSON schema forms from https://github.com/mozilla-services/react-jsonschema-form\n     * and JSON Schema from https://spacetelescope.github.io/understanding-json-schema/\n     * @param {object} object - The current selected object.\n     * @returns  A JSON Schema Form Component.\n     */\n\n  }, {\n    key: \"get_form\",\n    value: function get_form() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return {};\n    }\n    /**\n     * Returns a true/false value. Controls wether search is implement on live input or not.\n     * Can be overriden by the live_search member variable. Default is false.\n     *\n     *@return {boolean}\n     */\n\n  }, {\n    key: \"get_live_search\",\n    value: function get_live_search() {\n      return this.live_search;\n    }\n    /**\n     *Returns an object whose properties are field names corresponding to properties of any object\n     *in the queryset and whose values are transform functions. The example below will transform each \"name\"\n     *property of objects in the queryset to upper case in the list display view.\n     *@example\n     *get_field_transforms()\n     *{\n     * return { 'name' : function(name,object)\n     *                   {\n     *                       return name.toUpperCase()\n     *                   }\n     *         }\n     *\n     *}\n     *@return {object}\n     */\n\n  }, {\n    key: \"get_field_transforms\",\n    value: function get_field_transforms() {\n      if (this.field_transforms) {\n        return this.field_transforms;\n      }\n\n      return {};\n    }\n    /**\n     *Returns an object whose properties are field names corresponding to properties of any object\n     *in the queryset and whose values are transform functions. The example below will transform the header \"name\" to upper case in the list display view.\n     *@example\n     *get_header_transforms()\n     *{\n     * return { 'name' : function(name)\n     *                   {\n     *                       return name.toUpperCase()\n     *                   }\n     *         }\n     *}\n     *\n     *@return {object}\n     */\n\n  }, {\n    key: \"get_header_transforms\",\n    value: function get_header_transforms() {\n      if (this.header_transforms) {\n        return this.header_transforms;\n      }\n\n      return {};\n    }\n    /**\n     * Returns an object whose properties are extra  field names not corresponding to properties of any object\n     * in the queryset and whose values are display functions. This will create extra fields that are not tied to objects. Extra fields have to be manually included in the `list_display` in order to appear in the list display page. The display functions take the current object being rendered in the table row and  the field name\n     *@example\n     *get_extra_fields()\n     *{\n     * return { 'now' : function(object,label)\n     *                   {\n     *                      return moment(new Date()).format('LLL');\n     *                   }\n     *         }\n     *}\n     *\n     *@return {object}\n     */\n\n  }, {\n    key: \"get_extra_fields\",\n    value: function get_extra_fields() {\n      if (this.extra_fields) {\n        return this.extra_fields;\n      }\n\n      return {};\n    }\n    /**\n     * Returns the number of items to be listed in a page. Can be overridden by `list_per_page`.\n     *@return {number} The number of objects in a page\n     */\n\n  }, {\n    key: \"get_list_per_page\",\n    value: function get_list_per_page() {\n      if (this.list_per_page) {\n        return this.list_per_page;\n      }\n\n      return 10;\n    }\n    /**\n       * Gets an actions object whose properties are action names and values are action methods.\n       * This can be overridden by the action member variable. The default \"delete\" method is not\n       * implemented.\n       *\n       * Each actions object property (e.g. \"delete\") is passed an array of selected objects. One\n       * can then handle those objects. Actions will appear on the list display page within a\n       * dropdown. Selecting an action should have the action method applied to all currently \n       * selected objects.\n       * @example\n       *\n       * actions = { \"delete\" : (selected_objects)=>{ } }\n        *@return {object} An actions object\n       */\n\n  }, {\n    key: \"get_actions\",\n    value: function get_actions() {\n      if (this.actions) {\n        return this.actions;\n      }\n\n      return {};\n    }\n    /**\n     *   Gets the list/array of properties of the objects in the queryset that are clickable\n     *    when displayed on the list display page. It can be overridden by the member variable\n     *   `list_display_links`. A property is any string that should exist as a property in the objects within\n     *   a queryset and works with lodash's `_.at` function.\n     *\n     *   The properties \"name\",\"address.street\" and \"emails[0]\" are all acceptable by `_.at` in the example below\n     *   @example\n     *   let object={ name : \"any name\",{ address : { street : \"any\"}},emails: [\"any@any.com\"]}\n     *\n     *\n     *\n     * @return {string[]} A list of properties of the object to be displayed\n     */\n\n  }, {\n    key: \"get_list_display_links\",\n    value: function get_list_display_links() {\n      if (this.list_display_links) {\n        return this.list_display_links;\n      }\n\n      return [];\n    }\n    /**\n     *   Gets the list/array of properties/field names of the objects in the queryset to be\n     *   displayed on the list display page. It can be overridden by the member variable\n     *   list_display. A property is any string that should exist in the objects within\n     *   a queryset and works with lodash's _.at function. See more at\n     *   https://lodash.com/docs/#at\n     *\n     *   @example\n     *   let object={ name : \"any name\",{ address : { street : \"any\"}},emails: [\"any@any.com\"]}\n     *\n     *   The properties \"name\",\"address.street\" and \"emails[0]\" are all acceptable\n     *\n     * @return {string[]} A list of properties of the object to be displayed\n     */\n\n  }, {\n    key: \"get_list_display\",\n    value: function get_list_display() {\n      if (this.list_display) {\n        return this.list_display;\n      }\n\n      return [];\n    }\n    /**\n     * Returns an ordered queryset. The method checks to see if sorting is active and sorts\n     * the current queryset based on the sort order.\n     * @private\n     * @return {object[]} An ordered queryset\n     */\n\n  }, {\n    key: \"_get_ordered_queryset\",\n    value: function _get_ordered_queryset() {\n      if (this.sort_fields.length > 0) {\n        return this.sort_by(this.sort_fields, this.state.queryset);\n      }\n\n      return this.state.queryset ? this.state.queryset : [];\n    }\n    /**\n     * Implements search. This method should be overridden to implement a custom search\n     *\n     *@param {string} term - the search term\n     *@param {object[]} queryset - the current queryset\n     *@return {object[]} the queryset as a result of the search\n     */\n\n  }, {\n    key: \"search\",\n    value: function search(term, queryset) {\n      return queryset;\n    }\n    /**\n     * Grants permission to delete object. This method is not implemented and can be handled via\n     *  implementing actions.\n     *\n     *@param {object} object -\n     *@return {boolean} Returns true is the object has been deleted or false otherwise\n     */\n\n  }, {\n    key: \"has_delete_permission\",\n    value: function has_delete_permission(object) {\n      return true;\n    }\n    /**\n     * Grants permission to add an object. This method controls rendering of the Add\n     * button\n     *\n     *\n     *@return {boolean} Returns true is the object can be added or false otherwise\n     */\n\n  }, {\n    key: \"has_add_permission\",\n    value: function has_add_permission() {\n      return true;\n    }\n    /**\n     * Grants permission to change an object. It disables all links to the add/change page when\n     * enabled\n     *\n     *@return {boolean} Returns true is the object can be changed or false otherwise\n     */\n\n  }, {\n    key: \"has_change_permission\",\n    value: function has_change_permission() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return true;\n    }\n    /**\n     * Grants permission to the this admin interface.\n     *\n     *@return {boolean} Returns true if access is allowed false otherwise\n     */\n\n  }, {\n    key: \"has_module_permission\",\n    value: function has_module_permission() {\n      return true;\n    }\n    /*\n      _order_state(field)\n      {\n    let index=_.findIndex(this._sort_fields,item=> item.hasOwnProperty(field));\n    \tif(index<0)\n    {\n       return 'sort-not-active';\n    }\n    if(this._sort_fields[index][field]=='desc')\n    {\n      \n       return 'sort-reverse-active';\n    }\n    return 'sort-active';\n    }*/\n\n    /**\n       * This method adds up/down arrows to field headers on the list display page table\n       *\n       * @private \n       * @param {string} field -  the field/property name\n       \n       \n       */\n\n  }, {\n    key: \"_order_state_arrow\",\n    value: function _order_state_arrow(field) {\n      var index = _.findIndex(this.sort_fields, function (item) {\n        return item.hasOwnProperty(field);\n      });\n\n      if (index < 0) {\n        return null;\n      }\n\n      if (this.sort_fields[index][field] == \"desc\") {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 14\n          }\n        }, \"\\u21E9\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 12\n        }\n      }, \" \\u21E7\");\n    }\n    /**\n     *  This method  should be overriden and called after saving an object in the add/change view.       *  This method is not called at all here but provides hints on what to do after saving\n     *  an object. Change the state display_type to \"list\", object to \"null\" and refresh the quer         *  yset.\n     */\n\n  }, {\n    key: \"response_add\",\n    value: function response_add() {\n      this._display_will_change();\n\n      this.setState({\n        display_type: display_type.list,\n        object: null,\n        queryset: this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset)\n      }, this._display_changed);\n      return true;\n    }\n    /**\n     *  This method should be overriden and called after saving an object in the add/change view.         *  This method is not called at all here but provides hints on what to do after saving\n     *  an object. Change the state display_type to \"list\", object to \"null\" and refresh the quer         *  yset.\n     */\n\n  }, {\n    key: \"response_change\",\n    value: function response_change() {\n      this._display_will_change();\n\n      this.setState({\n        display_type: display_type.list,\n        object: null,\n        queryset: this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset)\n      }, this._display_changed);\n      return true;\n    }\n    /**\n       * A private method to wrap a table entry in an <a></a> tag in the display page.\n       * The method checks if permission is given to display links using the has_change_permission method\n       * @private\n       * @param {object} object - the current object to be displayed as a table\n       * entry in the display page\n       * @param {string} label - the name of the field \n       \n       */\n\n  }, {\n    key: \"_create_object_link\",\n    value: function _create_object_link(object, label) {\n      if (this.has_change_permission(object)) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          onClick: this._object_link_clicked(object),\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 9\n          }\n        }, \" \", label, \" \");\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 14\n          }\n        }, \" \", label, \" \");\n      }\n    }\n  }, {\n    key: \"set_queryset\",\n    value: function set_queryset(queryset) {\n      this.setState({\n        queryset: queryset\n      });\n    }\n  }, {\n    key: \"set_total\",\n    value: function set_total(total) {\n      this.setState({\n        total: total\n      });\n    }\n  }, {\n    key: \"_get_prop_label\",\n    value: function _get_prop_label(label) {\n      var labels = label.split(\".\");\n      return labels[labels.length - 1];\n    }\n  }, {\n    key: \"_get_table_header\",\n    value: function _get_table_header() {\n      var _this2 = this;\n\n      return this.get_list_display().map(function (item) {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: item,\n          onClick: _this2._sort_handler(item),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 9\n          }\n        }, \" \", _this2.get_header_transforms()[item] ? _this2.get_header_transforms()[item](item) : _.startCase(_this2._get_prop_label(item)), _this2._order_state_arrow(item), \" \");\n      });\n    }\n  }, {\n    key: \"_display_changed\",\n    value: function _display_changed() {\n      this.display_changed(this.state.display_type, this.state.object);\n    }\n    /**\n       * An event listener that listens to state changes in the display type i.e.\n       * from list to add/change. It is fired after state changes are made.\n       * \n       * @param {string} display_type - the current display type of the component either \"list\" or \"change\" \n       * @param {object} object - the current object or null\n       \n       */\n\n  }, {\n    key: \"display_changed\",\n    value: function display_changed(display_type, object) {}\n  }, {\n    key: \"_display_will_change\",\n    value: function _display_will_change() {\n      this.display_will_change(this.state.display_type, this.state.object);\n    }\n    /**\n       * An event listener that listens to state changes in the display type i.e.\n       * from list to add/change . It is fired before state changes are made.\n       * \n       * @param {string} display_type - the current display type of the component either \"list\" or \"change\" \n       * @param {object} object - the current object or null\n       \n       */\n\n  }, {\n    key: \"display_will_change\",\n    value: function display_will_change(display_type, object) {}\n  }, {\n    key: \"_object_link_clicked\",\n    value: function _object_link_clicked(object) {\n      var _this3 = this;\n\n      return function (event) {\n        _this3._display_will_change();\n\n        _this3.setState({\n          display_type: display_type.change,\n          object: object,\n          loading: false\n        }, _this3._display_changed());\n\n        event.preventDefault();\n      };\n    }\n  }, {\n    key: \"_display_field\",\n    value: function _display_field(object, item) {\n      var label = _.at(object, item)[\"0\"];\n\n      if (_.has(this.get_field_transforms(), item)) {\n        return this.get_field_transforms()[item](label, object);\n      }\n\n      if (_.at(this.get_extra_fields(), item)) {\n        if (this.get_extra_fields()[item]) {\n          label = this.get_extra_fields()[item](object, item);\n        }\n      }\n\n      return label;\n    }\n  }, {\n    key: \"set_filter_options\",\n    value: function set_filter_options(filter_name, options) {\n      var t = {};\n      t[filter_name] = options.map(function (option) {\n        option._filter_ = filter_name;\n        return option;\n      });\n      this.setState({\n        filter_options: _.assign(this.state.filter_options, t)\n      });\n    }\n  }, {\n    key: \"get_filter_values\",\n    value: function get_filter_values() {\n      return this.state.filter_values;\n    }\n  }, {\n    key: \"get_filters\",\n    value: function get_filters() {\n      /*\n      return {\n        \"by_id\" : { \"options\" : [\n         { value: 'one', label: 'One' },\n       { value: 'two', label: 'Two' },\n      \t    ],\n        \"filter_function\" : (option,queryset)=>\n        {\n       return queryset;\n        }\n             }\n       \n      }*/\n    }\n  }, {\n    key: \"_handle_filter_change\",\n    value: function _handle_filter_change(values) {\n      if (!(values instanceof Array) && values != null) {\n        values = [values];\n      }\n\n      this.setState({\n        filter_values: values || []\n      });\n\n      if (values == null || values.length <= 0) {\n        this.set_queryset(this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset));\n        return;\n      }\n\n      var filters = this.get_filters();\n\n      var _iterator = _createForOfIteratorHelper(values),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n\n          var queryset = filters[value._filter_].filter_function(value, this.state.queryset);\n\n          this.setState({\n            queryset: queryset,\n            total: queryset.length,\n            page_number: 1\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"render_filters\",\n    value: function render_filters() {\n      var options = [];\n      var filters = this.get_filters();\n\n      var _iterator2 = _createForOfIteratorHelper(_.keys(filters)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var filter = _step2.value;\n          options.push({\n            label: _.startCase(filter),\n            value: filter,\n            isDisabled: true,\n            filter: null\n          });\n\n          if (filters[filter].options.length > 0) {\n            var _iterator3 = _createForOfIteratorHelper(filters[filter].options),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var option = _step3.value;\n                option._filter_ = filter;\n                options.push(option);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n\n          if (this.state.filter_options[filter]) {\n            var _iterator4 = _createForOfIteratorHelper(this.state.filter_options[filter]),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var _option = _step4.value;\n                _option._filter_ = filter;\n                options.push(_option);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"10px\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: \"filter-form\",\n        isMulti: true,\n        onChange: this._handle_filter_change.bind(this),\n        closeMenuOnSelect: false,\n        value: this.state.filter_values,\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        placeholder: \"Select a filter\",\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"sort_by\",\n    value: function sort_by(sort_fields) {\n      return this.state.queryset ? this.state.queryset : [];\n    }\n  }, {\n    key: \"_sort_handler\",\n    value: function _sort_handler(field) {\n      var _this4 = this;\n\n      return function (event) {\n        var index = _.findIndex(_this4.sort_fields, function (item) {\n          return item.hasOwnProperty(field);\n        });\n\n        if (index >= 0) {\n          if (_this4.sort_fields[index][field] == \"asc\") {\n            _this4.sort_fields[index][field] = \"desc\";\n          } else {\n            _this4.sort_fields = _.filter(_this4.sort_fields, function (item) {\n              return !item.hasOwnProperty(field);\n            });\n          }\n        } else {\n          var temp = {};\n          temp[field] = \"asc\";\n\n          _this4.sort_fields.push(temp);\n        }\n\n        _this4.sort_by(_this4.sort_fields);\n\n        _this4.forceUpdate();\n      };\n    }\n    /**\n     * This method is an event handler that listens to when all objects of the queryset\n     * displayed within a single display page are selected\n     */\n\n  }, {\n    key: \"_select_all\",\n    value: function _select_all(event) {\n      if (this._all_selected) {\n        this.setState({\n          selected_objects: new Set([], this.is_object_equal)\n        });\n      } else {\n        this.setState({\n          selected_objects: new Set(this.state.queryset, this.is_object_equal)\n        });\n      }\n\n      this._all_selected = !this._all_selected;\n    }\n    /**\n     * This method is an event handler that listens when a single objects of the queryset\n     * displayed is selected\n     */\n\n  }, {\n    key: \"_select_one\",\n    value: function _select_one(object) {\n      var _this5 = this;\n\n      return function (event) {\n        if (_this5.state.selected_objects.contains(object)) {\n          _this5.state.selected_objects.remove(object);\n\n          _this5.setState({\n            selected_objects: _this5.state.selected_objects\n          });\n        } else {\n          _this5.state.selected_objects.add(object);\n\n          _this5.setState({\n            selected_objects: _this5.state.selected_objects\n          });\n        }\n      };\n    }\n    /**\n     * Generate the table body for the list display page\n     *\n     * @return  An array of table rows <tr/>\n     */\n\n  }, {\n    key: \"_get_table_body\",\n    value: function _get_table_body() {\n      var _this6 = this;\n\n      return this._get_ordered_queryset().map(function (object, i) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: \"row-\" + i,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 9\n          }\n        }, _this6.show_check_list() ? /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: i + \"_checkbox\",\n          onChange: _this6._select_one(object),\n          checked: _this6.state.selected_objects.contains(object),\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: i + \"_checkbox\",\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }\n        }, \"\\xA0\"), \" \") : null, _this6.get_list_display().map(function (item) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: item,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 15\n            }\n          }, \" \", _this6.get_list_display_links().find(function (a) {\n            return item == a;\n          }) ? _this6._create_object_link(object, _this6._display_field(object, item)) : _this6._display_field(object, item), \" \");\n        }));\n      });\n    }\n    /**\n     * Changes the state property \"loading\" to true. The state property can be used to show a\n     * progress indicator.\n     */\n\n  }, {\n    key: \"show_progress\",\n    value: function show_progress() {\n      this.setState({\n        loading: true\n      });\n    }\n    /**\n     * Changes the state property \"loading\" to false. This method  can be used to hide a\n     * progress indicator by inspecting the \"loading\" property of the state object.\n     */\n\n  }, {\n    key: \"hide_progress\",\n    value: function hide_progress() {\n      this.setState({\n        loading: false\n      });\n    }\n    /**\n     * The default progress indicator. Can be overriden.\n     * @return A progress indicator component\n     */\n\n  }, {\n    key: \"render_progress\",\n    value: function render_progress(loading) {\n      if (loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fetch-progress\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"progress\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n    /**\n     * An event listener that listens to the search event. This method calls search method which\n     * implements a custom search. The method uses the \"live_search\" property to implement live\n     * search or not.\n     * @private\n     * @param {object} event The search onChange event\n     */\n\n  }, {\n    key: \"_handle_search\",\n    value: function _handle_search(event) {\n      var term = event.target.value;\n\n      if (term) {\n        var key = event.which || event.keyCode;\n\n        if (this.get_live_search() || key === 13) {\n          var queryset = this.search(term, this.state.queryset);\n          this.setState({\n            queryset: queryset,\n            total: queryset.length\n          });\n        }\n      } else {\n        var _queryset = this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset);\n\n        this.setState({\n          queryset: _queryset,\n          total: _queryset.length\n        });\n      }\n    }\n    /**\n     * Renders the search component\n     *\n     * @return A search input field\n     */\n\n  }, {\n    key: \"render_search_field\",\n    value: function render_search_field() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"search\",\n        type: \"text\",\n        className: \"ra-search-field\",\n        placeholder: \"Search\",\n        onChange: this._handle_search,\n        onKeyUp: this._handle_search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 9\n        }\n      }));\n    }\n    /**\n     * Renders the add object button. Checks to see if permission is given by has_add_permission\n     *\n     * @return An add button component\n     */\n\n  }, {\n    key: \"render_add_button\",\n    value: function render_add_button() {\n      if (this.has_add_permission()) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"ra-add-button\",\n          onClick: this._object_link_clicked(null),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 9\n          }\n        }, \" \", \"Add \", _.startCase(this.name));\n      }\n    }\n    /**\n     * Renders the table in the display page. This calls _get_table_header and _get_table_body\n     *\n     * @return An a table displaying the state queryset set objects\n     */\n\n  }, {\n    key: \"render_table\",\n    value: function render_table() {\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }\n      }, this.show_check_list() ? /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"all_boxes\",\n        onChange: this._select_all,\n        ref: this._check_all,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 17\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"all_boxes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 17\n        }\n      }, \"\\xA0\")) : null, this._get_table_header())), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 9\n        }\n      }, this._get_table_body()));\n    }\n    /**\n     * An event listener that listens to actions selected.\n     *\n     *@param {object} event -  the DOM on-change event\n     */\n\n  }, {\n    key: \"action_selected\",\n    value: function action_selected(event) {\n      var action = event.target.value; //console.log(this.state.selected_objects.getItems());\n\n      this.get_actions()[action](this.state.selected_objects.getItems());\n      this.get_queryset(this.state.page_number, this.get_list_per_page());\n    }\n    /**\n     * Calls get_queryset for a new page number\n     *\n     */\n\n  }, {\n    key: \"_refresh_queryset\",\n    value: function _refresh_queryset() {\n      this.setState({\n        queryset: this.get_queryset(this.state.page_number, this.get_list_per_page(), this.state.queryset)\n      });\n    }\n    /**\n     * An event listener that listens when a page is  selected. Only fetch a new queryset set\n     * if fetch_for_page is true, else ignore. Setting fetch_for_page to false allows frontend\n     * pagination\n     *\n     *@param {number} page -  the page number selected\n     */\n\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(page) {\n      var _this7 = this;\n\n      return function (event) {\n        _this7.setState({\n          page_number: page.page\n        }, _this7.fetch_for_page ? _this7._refresh_queryset : function () {});\n\n        event.preventDefault();\n      };\n    }\n    /**\n     * An event listener that listens when the next page is  selected.\n     *\n     */\n\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      this.setState({\n        page_number: Math.min(this.state.page_number + 1, this.state.total)\n      });\n    }\n    /**\n     * An event listener that listens when the previous page is  selected.\n     *\n     */\n\n  }, {\n    key: \"prevPage\",\n    value: function prevPage() {\n      this.setState({\n        page_number: Math.max(this.state.page_number - 1, 1)\n      });\n    }\n    /**\n     * Renders the pagination UI\n     *\n     * @return A component that renders the pagination controls\n     */\n\n  }, {\n    key: \"render_pagination\",\n    value: function render_pagination() {\n      var _this8 = this;\n\n      var pages = [];\n\n      if (this.state.total) {\n        var numpages = Math.ceil(this.state.total / this.get_list_per_page());\n        var pages_in_pagination = numpages < this.pages_in_pagination ? numpages : this.pages_in_pagination;\n\n        if (this.state.page_number == 1) {\n          for (var i = 0; i < pages_in_pagination; i++) {\n            pages.push(i + 1);\n          }\n        } else if (this.state.page_number == numpages) {\n          for (var _i = 0; _i < pages_in_pagination; _i++) {\n            pages.push(numpages - _i);\n          }\n        } else {\n          for (var _i2 = 0; _i2 < pages_in_pagination; _i2++) {\n            pages.push(this.state.page_number + _i2);\n          }\n        }\n        /*\n        for(var i=0;i<numpages;i++)\n        {\n        pages.push(i+1);\n        }*/\n\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pull-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"summary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 9\n        }\n      }, this.get_list_per_page() * (this.state.page_number - 1) + 1, \"-\", Math.min(this.get_list_per_page() * (this.state.page_number - 1) + this.get_list_per_page(), this.state.total), \" \", \"of \", this.state.total, \" \"), /*#__PURE__*/React.createElement(\"nav\", {\n        \"aria-label\": \"Page navigation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: \"left\",\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        \"aria-label\": \"Previous\",\n        onClick: this.prevPage.bind(this),\n        className: \"page-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 17\n        }\n      }, \"\\xAB\"))), pages.map(function (page) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: page,\n          className: \"page-item\",\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          className: \"page-link\",\n          onClick: _this8.selectPage({\n            page: page\n          }),\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 19\n          }\n        }, page));\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        key: \"right\",\n        onClick: this.nextPage.bind(this),\n        \"aria-label\": \"Next\",\n        className: \"page-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 17\n        }\n      }, \"\\xBB\"))))));\n    }\n    /**\n     * Renders the actions select component\n     *\n     * @return A component that renders a select input for all actions in the list display page\n     */\n\n  }, {\n    key: \"render_actions\",\n    value: function render_actions() {\n      var _this9 = this;\n\n      return /*#__PURE__*/React.createElement(\"select\", {\n        className: \"ra-action-button\",\n        onChange: this.action_selected.bind(this),\n        defaultValue: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        key: \"key\",\n        value: \"\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 9\n        }\n      }, \"Choose an action\"), _.keys(this.get_actions()).map(function (action) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: action,\n          value: action,\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 13\n          }\n        }, \" \", _.startCase(action));\n      }));\n    }\n    /**\n     * Renders the back button component in the add/change view\n     * @ignore\n     * @return A component that renders a back button\n     */\n\n  }, {\n    key: \"render_back_button\",\n    value: function render_back_button() {\n      var _this10 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ra-back-button\",\n        onClick: function onClick() {\n          _this10.setState({\n            display_type: display_type.list,\n            object: null\n          });\n\n          _this10.get_queryset(_this10.state.page_number, _this10.get_list_per_page(), _this10.state.queryset);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 9\n        }\n      }, \" \", \"Back\", \" \"));\n    }\n  }, {\n    key: \"render_clear_button\",\n    value: function render_clear_button() {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ra-clear-button\",\n        onClick: this._clear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 7\n        }\n      }, \"Clear\");\n    }\n    /**\n     * Renders the admin interface component\n     *\n     * @return A component that renders the admin interface\n     */\n\n  }, {\n    key: \"render_list_view\",\n    value: function render_list_view() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 7\n        }\n      }, this.render_add_button(), this.render_clear_button(), this.render_below_add_button(), this.render_search_field(), this.render_below_search_field(), this.render_actions(), this.render_below_actions(), this.render_filters(), this.render_below_filters(), this.render_table(), this.render_below_table(), this.render_progress(this.state.loading), this.render_below_progress(), this.render_pagination());\n    }\n  }, {\n    key: \"render_below_add_button\",\n    value: function render_below_add_button() {}\n  }, {\n    key: \"render_below_search_field\",\n    value: function render_below_search_field() {}\n  }, {\n    key: \"render_below_actions\",\n    value: function render_below_actions() {}\n  }, {\n    key: \"render_below_filters\",\n    value: function render_below_filters() {}\n  }, {\n    key: \"render_below_table\",\n    value: function render_below_table() {}\n  }, {\n    key: \"render_below_progress\",\n    value: function render_below_progress() {}\n  }, {\n    key: \"render_change_view\",\n    value: function render_change_view() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 7\n        }\n      }, this.render_progress(this.state.loading), this.render_back_button(), this.get_form(this.state.object));\n    }\n  }, {\n    key: \"render_above_change_view\",\n    value: function render_above_change_view() {}\n  }, {\n    key: \"render_below_change_view\",\n    value: function render_below_change_view() {}\n  }, {\n    key: \"render_above_list_view\",\n    value: function render_above_list_view() {}\n  }, {\n    key: \"render_below_list_view\",\n    value: function render_below_list_view() {}\n  }, {\n    key: \"render_list_page\",\n    value: function render_list_page() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 7\n        }\n      }, this.render_above_list_view(), this.render_list_view(), this.render_below_list_view(), this.render_change_modal());\n    }\n  }, {\n    key: \"render_change_modal\",\n    value: function render_change_modal() {\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.display_type != display_type.list,\n        contentLabel: this.name || \"\",\n        parentSelector: function parentSelector() {\n          return document.querySelector(\"#react-crud-admin\");\n        },\n        styles: customStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 7\n        }\n      }, this.render_above_change_view(), this.render_change_view(), this.render_below_change_view());\n    }\n  }, {\n    key: \"render_permission_denied\",\n    value: function render_permission_denied() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 7\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 9\n        }\n      }, \" Permission Denied \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.has_module_permission()) {\n        return this.render_permission_denied();\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"react-crud-admin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 12\n        }\n      }, this.render_list_page());\n    }\n  }, {\n    key: \"show_list_view\",\n    value: function show_list_view() {\n      this._display_will_change();\n\n      this.setState({\n        display_type: display_type.list\n      }, this._display_changed);\n    }\n  }, {\n    key: \"show_check_list\",\n    value: function show_check_list() {\n      return true;\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/Users/dor/Desktop/insert_extract_react/src/admin.js"],"names":["React","_","Set","Select","Modal","require","uuidv1","v1","display_type","list","change","customStyles","content","top","left","right","bottom","marginRight","transform","Admin","props","name","name_plural","live_search","field_transforms","header_transforms","extra_fields","list_display","list_display_links","list_per_page","sort_fields","is_object_equal","a","b","pages_in_pagination","fetch_for_page","actions","delete","selected_objects","_change_uuid","queryset","_all_selected","bind_exclude","keys","map","key","includes","bind","state","page_number","object","total","filter_options","filter_values","get_queryset","length","_handle_search","_select_all","_select_one","response_change","response_add","_clear","_check_all","createRef","current","checked","setState","get_list_per_page","sort_by","term","field","index","findIndex","item","hasOwnProperty","_display_will_change","_display_changed","label","has_change_permission","_object_link_clicked","labels","split","get_list_display","_sort_handler","get_header_transforms","startCase","_get_prop_label","_order_state_arrow","display_changed","display_will_change","event","loading","preventDefault","at","has","get_field_transforms","get_extra_fields","filter_name","options","t","option","_filter_","assign","values","Array","set_queryset","filters","get_filters","value","filter_function","filter","push","isDisabled","marginLeft","width","_handle_filter_change","temp","forceUpdate","contains","remove","add","_get_ordered_queryset","i","show_check_list","get_list_display_links","find","_create_object_link","_display_field","target","which","keyCode","get_live_search","search","has_add_permission","_get_table_header","_get_table_body","action","get_actions","getItems","page","_refresh_queryset","Math","min","max","pages","numpages","ceil","prevPage","selectPage","nextPage","action_selected","render_add_button","render_clear_button","render_below_add_button","render_search_field","render_below_search_field","render_actions","render_below_actions","render_filters","render_below_filters","render_table","render_below_table","render_progress","render_below_progress","render_pagination","render_back_button","get_form","render_above_list_view","render_list_view","render_below_list_view","render_change_modal","document","querySelector","render_above_change_view","render_change_view","render_below_change_view","has_module_permission","render_permission_denied","render_list_page","Component"],"mappings":"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AED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;4CAE0B;AACtB,UAAI,KAAKC,iBAAT,EAA4B;AAC1B,eAAO,KAAKA,iBAAZ;AACD;;AAED,aAAO,EAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;uCAEqB;AACjB,UAAI,KAAKC,YAAT,EAAuB;AACrB,eAAO,KAAKA,YAAZ;AACD;;AAED,aAAO,EAAP;AACD;AACD;AACF;AACA;AACA;;;;wCAEsB;AAClB,UAAI,KAAKG,aAAT,EAAwB;AACtB,eAAO,KAAKA,aAAZ;AACD;;AACD,aAAO,EAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;kCAGgB;AACZ,UAAI,KAAKO,OAAT,EAAkB;AAChB,eAAO,KAAKA,OAAZ;AACD;;AAED,aAAO,EAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6CAE2B;AACvB,UAAI,KAAKR,kBAAT,EAA6B;AAC3B,eAAO,KAAKA,kBAAZ;AACD;;AACD,aAAO,EAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;uCAEqB;AACjB,UAAI,KAAKD,YAAT,EAAuB;AACrB,eAAO,KAAKA,YAAZ;AACD;;AACD,aAAO,EAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;;4CAE0B;AACtB,UAAI,KAAKG,WAAL,CAAiByB,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,eAAO,KAAKa,OAAL,CAAa,KAAKtC,WAAlB,EAA+B,KAAKkB,KAAL,CAAWR,QAA1C,CAAP;AACD;;AAED,aAAO,KAAKQ,KAAL,CAAWR,QAAX,GAAsB,KAAKQ,KAAL,CAAWR,QAAjC,GAA4C,EAAnD;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;;2BAES6B,I,E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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport Set from \"./set.js\";\nimport Select from \"react-select\";\nimport Modal from \"react-modal\";\nconst { v1: uuidv1 } = require('uuid');\n\n\n//require(\"./admin.scss\");\nexport const display_type = {\n  list: \"list\",\n  change: \"change\"\n};\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n/** Admin Class extends React.Component. To implement a CRUD interface similar to Django Admin you need to extend the Admin class. */\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.name = \"default\";\n    this.name_plural = \"defaults\";\n    this.live_search = false;\n    this.field_transforms = {};\n    this.header_transforms = {};\n    this.extra_fields = {};\n    this.list_display = [];\n    this.list_display_links = [];\n    this.list_per_page = 10;\n    this.sort_fields = [];\n    this.is_object_equal = (a, b) => a == b;\n    this.pages_in_pagination = 3;\n    this.fetch_for_page = true;\n    this.actions = {\n      delete: selected_objects => {}\n    };\n    this._change_uuid = uuidv1();\n    this.queryset = [];\n    this._all_selected = false;\n\n    if (props) {\n      this.bind_exclude = props.bind_exclude ? props.bind_exclude : [];\n      _.keys(props).map(key => {\n        if (typeof props[key] == \"function\") {\n          if (_.includes(key, this.bind_exclude)) {\n            this[key] = props[key];\n\n            this[key].bind(this);\n          }\n        } else {\n          this[key] = props[key];\n        }\n      });\n    }\n\n    /**\n     * Initialize the state of the component\n     */\n    this.state = {\n      display_type: display_type.list,\n      page_number: 1,\n      object: null,\n      selected_objects: new Set([], this.is_object_equal),\n      total: 0,\n      filter_options: {},\n      filter_values: []\n    };\n\n    let queryset = this.get_queryset(\n      this.state.page_number,\n      this.list_per_page,\n      this.state.queryset\n    )\n      ? this.get_queryset(\n          this.state.page_number,\n          this.list_per_page,\n          this.state.queryset\n        )\n      : [];\n    this.state.queryset = queryset;\n    this.state.total = queryset.length;\n    this._handle_search = this._handle_search.bind(this);\n    this._select_all = this._select_all.bind(this);\n    this._select_one = this._select_one.bind(this);\n    this.response_change = this.response_change.bind(this);\n    this.response_add = this.response_add.bind(this);\n    this._clear = this._clear.bind(this);\n    this._check_all = React.createRef();\n  }\n  /**\n   * This function clears selected filters and selected objects\n   * \n\n   */\n\n  _clear() {\n    if (this._check_all) {\n      this._check_all.current.checked = false;\n      this._all_selected = false;\n    }\n\n    this.setState({\n      display_type: display_type.list,\n      page_number: 1,\n      selected_objects: new Set([], this.is_object_equal),\n      queryset: this.get_queryset(1, this.list_per_page, this.state.queryset),\n      filter_values: []\n    });\n  }\n\n  /**\n   * This function returns an array of objects that will serve as the\n   * queryset for the admin interface. Typically involves an HTTP request\n   * to a backend.\n   * @param {number} page_number - The current page number\n   * @param {number} list_per_page - Number items to list per page. Defaults to `list_per_page`\n   * @param {object[]} queryset - The current queryset\n   * @returns {object[]} An array of objects. - Objects to display\n   */\n\n  get_queryset(\n    page_number = this.state.page_number,\n    list_per_page = this.get_list_per_page(),\n    queryset = this.state.queryset\n  ) {\n    return this.queryset;\n  }\n\n  /**\n   * This functions returns a JSON Schema Form for editing\n   * the objects in the array returned by get_queryset(). This method needs to be overridden to\n   * so as to return a Form Component for the object.  Learn more on\n   * JSON schema forms from https://github.com/mozilla-services/react-jsonschema-form\n   * and JSON Schema from https://spacetelescope.github.io/understanding-json-schema/\n   * @param {object} object - The current selected object.\n   * @returns  A JSON Schema Form Component.\n   */\n\n  get_form(object = null) {\n    return {};\n  }\n  /**\n   * Returns a true/false value. Controls wether search is implement on live input or not.\n   * Can be overriden by the live_search member variable. Default is false.\n   *\n   *@return {boolean}\n   */\n\n  get_live_search() {\n    return this.live_search;\n  }\n\n  /**\n   *Returns an object whose properties are field names corresponding to properties of any object\n   *in the queryset and whose values are transform functions. The example below will transform each \"name\"\n   *property of objects in the queryset to upper case in the list display view.\n   *@example\n   *get_field_transforms()\n   *{\n   * return { 'name' : function(name,object)\n   *                   {\n   *                       return name.toUpperCase()\n   *                   }\n   *         }\n   *\n   *}\n   *@return {object}\n   */\n\n  get_field_transforms() {\n    if (this.field_transforms) {\n      return this.field_transforms;\n    }\n    return {};\n  }\n\n  /**\n   *Returns an object whose properties are field names corresponding to properties of any object\n   *in the queryset and whose values are transform functions. The example below will transform the header \"name\" to upper case in the list display view.\n   *@example\n   *get_header_transforms()\n   *{\n   * return { 'name' : function(name)\n   *                   {\n   *                       return name.toUpperCase()\n   *                   }\n   *         }\n   *}\n   *\n   *@return {object}\n   */\n\n  get_header_transforms() {\n    if (this.header_transforms) {\n      return this.header_transforms;\n    }\n\n    return {};\n  }\n\n  /**\n   * Returns an object whose properties are extra  field names not corresponding to properties of any object\n   * in the queryset and whose values are display functions. This will create extra fields that are not tied to objects. Extra fields have to be manually included in the `list_display` in order to appear in the list display page. The display functions take the current object being rendered in the table row and  the field name\n   *@example\n   *get_extra_fields()\n   *{\n   * return { 'now' : function(object,label)\n   *                   {\n   *                      return moment(new Date()).format('LLL');\n   *                   }\n   *         }\n   *}\n   *\n   *@return {object}\n   */\n\n  get_extra_fields() {\n    if (this.extra_fields) {\n      return this.extra_fields;\n    }\n\n    return {};\n  }\n  /**\n   * Returns the number of items to be listed in a page. Can be overridden by `list_per_page`.\n   *@return {number} The number of objects in a page\n   */\n\n  get_list_per_page() {\n    if (this.list_per_page) {\n      return this.list_per_page;\n    }\n    return 10;\n  }\n\n  /**\n     * Gets an actions object whose properties are action names and values are action methods.\n     * This can be overridden by the action member variable. The default \"delete\" method is not\n     * implemented.\n     *\n     * Each actions object property (e.g. \"delete\") is passed an array of selected objects. One\n     * can then handle those objects. Actions will appear on the list display page within a\n     * dropdown. Selecting an action should have the action method applied to all currently \n     * selected objects.\n     * @example\n     *\n     * actions = { \"delete\" : (selected_objects)=>{ } }\n\n     *@return {object} An actions object\n     */\n\n  get_actions() {\n    if (this.actions) {\n      return this.actions;\n    }\n\n    return {};\n  }\n  /**\n   *   Gets the list/array of properties of the objects in the queryset that are clickable\n   *    when displayed on the list display page. It can be overridden by the member variable\n   *   `list_display_links`. A property is any string that should exist as a property in the objects within\n   *   a queryset and works with lodash's `_.at` function.\n   *\n   *   The properties \"name\",\"address.street\" and \"emails[0]\" are all acceptable by `_.at` in the example below\n   *   @example\n   *   let object={ name : \"any name\",{ address : { street : \"any\"}},emails: [\"any@any.com\"]}\n   *\n   *\n   *\n   * @return {string[]} A list of properties of the object to be displayed\n   */\n\n  get_list_display_links() {\n    if (this.list_display_links) {\n      return this.list_display_links;\n    }\n    return [];\n  }\n  /**\n   *   Gets the list/array of properties/field names of the objects in the queryset to be\n   *   displayed on the list display page. It can be overridden by the member variable\n   *   list_display. A property is any string that should exist in the objects within\n   *   a queryset and works with lodash's _.at function. See more at\n   *   https://lodash.com/docs/#at\n   *\n   *   @example\n   *   let object={ name : \"any name\",{ address : { street : \"any\"}},emails: [\"any@any.com\"]}\n   *\n   *   The properties \"name\",\"address.street\" and \"emails[0]\" are all acceptable\n   *\n   * @return {string[]} A list of properties of the object to be displayed\n   */\n\n  get_list_display() {\n    if (this.list_display) {\n      return this.list_display;\n    }\n    return [];\n  }\n  /**\n   * Returns an ordered queryset. The method checks to see if sorting is active and sorts\n   * the current queryset based on the sort order.\n   * @private\n   * @return {object[]} An ordered queryset\n   */\n\n  _get_ordered_queryset() {\n    if (this.sort_fields.length > 0) {\n      return this.sort_by(this.sort_fields, this.state.queryset);\n    }\n\n    return this.state.queryset ? this.state.queryset : [];\n  }\n  /**\n   * Implements search. This method should be overridden to implement a custom search\n   *\n   *@param {string} term - the search term\n   *@param {object[]} queryset - the current queryset\n   *@return {object[]} the queryset as a result of the search\n   */\n\n  search(term, queryset) {\n    return queryset;\n  }\n  /**\n   * Grants permission to delete object. This method is not implemented and can be handled via\n   *  implementing actions.\n   *\n   *@param {object} object -\n   *@return {boolean} Returns true is the object has been deleted or false otherwise\n   */\n\n  has_delete_permission(object) {\n    return true;\n  }\n  /**\n   * Grants permission to add an object. This method controls rendering of the Add\n   * button\n   *\n   *\n   *@return {boolean} Returns true is the object can be added or false otherwise\n   */\n\n  has_add_permission() {\n    return true;\n  }\n  /**\n   * Grants permission to change an object. It disables all links to the add/change page when\n   * enabled\n   *\n   *@return {boolean} Returns true is the object can be changed or false otherwise\n   */\n\n  has_change_permission(object = null) {\n    return true;\n  }\n  /**\n   * Grants permission to the this admin interface.\n   *\n   *@return {boolean} Returns true if access is allowed false otherwise\n   */\n\n  has_module_permission() {\n    return true;\n  }\n  /*\n    _order_state(field)\n    {\n\n\tlet index=_.findIndex(this._sort_fields,item=> item.hasOwnProperty(field));\n\t\n\tif(index<0)\n\t{\n\t    return 'sort-not-active';\n\n\t}\n\tif(this._sort_fields[index][field]=='desc')\n\t{\n\t   \n\t    return 'sort-reverse-active';\n\t}\n\treturn 'sort-active';\n\t}*/\n\n  /**\n     * This method adds up/down arrows to field headers on the list display page table\n     *\n     * @private \n     * @param {string} field -  the field/property name\n     \n     \n     */\n\n  _order_state_arrow(field) {\n    let index = _.findIndex(this.sort_fields, item =>\n      item.hasOwnProperty(field)\n    );\n\n    if (index < 0) {\n      return null;\n    }\n    if (this.sort_fields[index][field] == \"desc\") {\n      return <span>&#8681;</span>;\n    }\n    return <span> &#8679;</span>;\n  }\n  /**\n   *  This method  should be overriden and called after saving an object in the add/change view.       *  This method is not called at all here but provides hints on what to do after saving\n   *  an object. Change the state display_type to \"list\", object to \"null\" and refresh the quer         *  yset.\n   */\n\n  response_add() {\n    this._display_will_change();\n    this.setState(\n      {\n        display_type: display_type.list,\n        object: null,\n        queryset: this.get_queryset(\n          this.state.page_number,\n          this.get_list_per_page(),\n          this.state.queryset\n        )\n      },\n      this._display_changed\n    );\n\n    return true;\n  }\n  /**\n   *  This method should be overriden and called after saving an object in the add/change view.         *  This method is not called at all here but provides hints on what to do after saving\n   *  an object. Change the state display_type to \"list\", object to \"null\" and refresh the quer         *  yset.\n   */\n\n  response_change() {\n    this._display_will_change();\n    this.setState(\n      {\n        display_type: display_type.list,\n        object: null,\n        queryset: this.get_queryset(\n          this.state.page_number,\n          this.get_list_per_page(),\n          this.state.queryset\n        )\n      },\n      this._display_changed\n    );\n\n    return true;\n  }\n  /**\n     * A private method to wrap a table entry in an <a></a> tag in the display page.\n     * The method checks if permission is given to display links using the has_change_permission method\n     * @private\n     * @param {object} object - the current object to be displayed as a table\n     * entry in the display page\n     * @param {string} label - the name of the field \n     \n     */\n\n  _create_object_link(object, label) {\n    if (this.has_change_permission(object)) {\n      return (\n        <a onClick={this._object_link_clicked(object)} href=\"#\">\n          {\" \"}\n          {label}{\" \"}\n        </a>\n      );\n    } else {\n      return <span> {label} </span>;\n    }\n  }\n\n  set_queryset(queryset) {\n    this.setState({ queryset: queryset });\n  }\n\n  set_total(total) {\n    this.setState({ total: total });\n  }\n\n  _get_prop_label(label) {\n    let labels = label.split(\".\");\n    return labels[labels.length - 1];\n  }\n  _get_table_header() {\n    return this.get_list_display().map(item => {\n      return (\n        <th key={item} onClick={this._sort_handler(item)}>\n          {\" \"}\n          {this.get_header_transforms()[item]\n            ? this.get_header_transforms()[item](item)\n            : _.startCase(this._get_prop_label(item))}\n          {this._order_state_arrow(item)}{\" \"}\n        </th>\n      );\n    });\n  }\n  _display_changed() {\n    this.display_changed(this.state.display_type, this.state.object);\n  }\n  /**\n     * An event listener that listens to state changes in the display type i.e.\n     * from list to add/change. It is fired after state changes are made.\n     * \n     * @param {string} display_type - the current display type of the component either \"list\" or \"change\" \n     * @param {object} object - the current object or null\n     \n     */\n\n  display_changed(display_type, object) {}\n  _display_will_change() {\n    this.display_will_change(this.state.display_type, this.state.object);\n  }\n  /**\n     * An event listener that listens to state changes in the display type i.e.\n     * from list to add/change . It is fired before state changes are made.\n     * \n     * @param {string} display_type - the current display type of the component either \"list\" or \"change\" \n     * @param {object} object - the current object or null\n     \n     */\n\n  display_will_change(display_type, object) {}\n  _object_link_clicked(object) {\n    return event => {\n      this._display_will_change();\n      this.setState(\n        { display_type: display_type.change, object: object, loading: false },\n        this._display_changed()\n      );\n      event.preventDefault();\n    };\n  }\n\n  _display_field(object, item) {\n    let label = _.at(object, item)[\"0\"];\n\n    if (_.has(this.get_field_transforms(), item)) {\n      return this.get_field_transforms()[item](label, object);\n    }\n\n    if (_.at(this.get_extra_fields(), item)) {\n      if (this.get_extra_fields()[item]) {\n        label = this.get_extra_fields()[item](object, item);\n      }\n    }\n\n    return label;\n  }\n\n  set_filter_options(filter_name, options) {\n    let t = {};\n    t[filter_name] = options.map(option => {\n      option._filter_ = filter_name;\n      return option;\n    });\n    this.setState({ filter_options: _.assign(this.state.filter_options, t) });\n  }\n\n  get_filter_values() {\n    return this.state.filter_values;\n  }\n  get_filters() {\n    /*\n\treturn {\n\n\t    \"by_id\" : { \"options\" : [\n\t\t\t    { value: 'one', label: 'One' },\n\t    { value: 'two', label: 'Two' },\n\n\t\t\n\t    ],\n\t     \"filter_function\" : (option,queryset)=>\n\t     {\n\n\n\t\t return queryset;\n\t     }\n           }\n\t    \n\t}*/\n  }\n  _handle_filter_change(values) {\n    if (!(values instanceof Array) && values != null) {\n      values = [values];\n    }\n\n    this.setState({ filter_values: values || [] });\n\n    if (values == null || values.length <= 0) {\n      this.set_queryset(\n        this.get_queryset(\n          this.state.page_number,\n          this.get_list_per_page(),\n          this.state.queryset\n        )\n      );\n      return;\n    }\n\n    let filters = this.get_filters();\n    for (let value of values) {\n      let queryset = filters[value._filter_].filter_function(\n        value,\n        this.state.queryset\n      );\n      this.setState({\n        queryset: queryset,\n        total: queryset.length,\n        page_number: 1\n      });\n    }\n  }\n  render_filters() {\n    let options = [];\n    let filters = this.get_filters();\n    for (let filter of _.keys(filters)) {\n      options.push({\n        label: _.startCase(filter),\n        value: filter,\n        isDisabled: true,\n        filter: null\n      });\n\n      if (filters[filter].options.length > 0) {\n        for (let option of filters[filter].options) {\n          option._filter_ = filter;\n          options.push(option);\n        }\n      }\n      if (this.state.filter_options[filter]) {\n        for (let option of this.state.filter_options[filter]) {\n          option._filter_ = filter;\n          options.push(option);\n        }\n      }\n    }\n\n    return (\n      <div style={{ marginLeft: \"10px\", width: \"100%\" }}>\n        <Select\n          name=\"filter-form\"\n          isMulti={true}\n          onChange={this._handle_filter_change.bind(this)}\n          closeMenuOnSelect={false}\n          value={this.state.filter_values}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n          placeholder={\"Select a filter\"}\n          options={options}\n        />\n      </div>\n    );\n  }\n\n  sort_by(sort_fields) {\n    return this.state.queryset ? this.state.queryset : [];\n  }\n\n  _sort_handler(field) {\n    return event => {\n      let index = _.findIndex(this.sort_fields, item =>\n        item.hasOwnProperty(field)\n      );\n      if (index >= 0) {\n        if (this.sort_fields[index][field] == \"asc\") {\n          this.sort_fields[index][field] = \"desc\";\n        } else {\n          this.sort_fields = _.filter(\n            this.sort_fields,\n            item => !item.hasOwnProperty(field)\n          );\n        }\n      } else {\n        let temp = {};\n        temp[field] = \"asc\";\n        this.sort_fields.push(temp);\n      }\n\n      this.sort_by(this.sort_fields);\n      this.forceUpdate();\n    };\n  }\n  /**\n   * This method is an event handler that listens to when all objects of the queryset\n   * displayed within a single display page are selected\n   */\n\n  _select_all(event) {\n    if (this._all_selected) {\n      this.setState({ selected_objects: new Set([], this.is_object_equal) });\n    } else {\n      this.setState({\n        selected_objects: new Set(this.state.queryset, this.is_object_equal)\n      });\n    }\n    this._all_selected = !this._all_selected;\n  }\n  /**\n   * This method is an event handler that listens when a single objects of the queryset\n   * displayed is selected\n   */\n\n  _select_one(object) {\n    return event => {\n      if (this.state.selected_objects.contains(object)) {\n        this.state.selected_objects.remove(object);\n\n        this.setState({ selected_objects: this.state.selected_objects });\n      } else {\n        this.state.selected_objects.add(object);\n        this.setState({ selected_objects: this.state.selected_objects });\n      }\n    };\n  }\n\n  /**\n   * Generate the table body for the list display page\n   *\n   * @return  An array of table rows <tr/>\n   */\n\n  _get_table_body() {\n    return this._get_ordered_queryset().map((object, i) => {\n      return (\n        <tr key={\"row-\" + i}>\n          {this.show_check_list() ? (\n            <td>\n              <input\n                type=\"checkbox\"\n                id={i + \"_checkbox\"}\n                onChange={this._select_one(object)}\n                checked={this.state.selected_objects.contains(object)}\n              />\n              <label htmlFor={i + \"_checkbox\"}>&nbsp;</label>{\" \"}\n            </td>\n          ) : null}\n          {this.get_list_display().map(item => {\n            return (\n              <td key={item}>\n                {\" \"}\n                {this.get_list_display_links().find(a => {\n                  return item == a;\n                })\n                  ? this._create_object_link(\n                      object,\n                      this._display_field(object, item)\n                    )\n                  : this._display_field(object, item)}{\" \"}\n              </td>\n            );\n          })}\n        </tr>\n      );\n    });\n  }\n  /**\n   * Changes the state property \"loading\" to true. The state property can be used to show a\n   * progress indicator.\n   */\n\n  show_progress() {\n    this.setState({ loading: true });\n  }\n  /**\n   * Changes the state property \"loading\" to false. This method  can be used to hide a\n   * progress indicator by inspecting the \"loading\" property of the state object.\n   */\n\n  hide_progress() {\n    this.setState({ loading: false });\n  }\n  /**\n   * The default progress indicator. Can be overriden.\n   * @return A progress indicator component\n   */\n\n  render_progress(loading) {\n    if (loading) {\n      return (\n        <div className=\"fetch-progress\">\n          <progress />\n        </div>\n      );\n    }\n  }\n  /**\n   * An event listener that listens to the search event. This method calls search method which\n   * implements a custom search. The method uses the \"live_search\" property to implement live\n   * search or not.\n   * @private\n   * @param {object} event The search onChange event\n   */\n\n  _handle_search(event) {\n    let term = event.target.value;\n\n    if (term) {\n      let key = event.which || event.keyCode;\n\n      if (this.get_live_search() || key === 13) {\n        let queryset = this.search(term, this.state.queryset);\n        this.setState({ queryset: queryset, total: queryset.length });\n      }\n    } else {\n      let queryset = this.get_queryset(\n        this.state.page_number,\n        this.get_list_per_page(),\n        this.state.queryset\n      );\n      this.setState({\n        queryset: queryset,\n        total: queryset.length\n      });\n    }\n  }\n  /**\n   * Renders the search component\n   *\n   * @return A search input field\n   */\n\n  render_search_field() {\n    return (\n      <div>\n        <input\n          name=\"search\"\n          type=\"text\"\n          className=\"ra-search-field\"\n          placeholder=\"Search\"\n          onChange={this._handle_search}\n          onKeyUp={this._handle_search}\n        />\n      </div>\n    );\n  }\n  /**\n   * Renders the add object button. Checks to see if permission is given by has_add_permission\n   *\n   * @return An add button component\n   */\n\n  render_add_button() {\n    if (this.has_add_permission()) {\n      return (\n        <button\n          className={\"ra-add-button\"}\n          onClick={this._object_link_clicked(null)}\n        >\n          {\" \"}\n          Add {_.startCase(this.name)}\n        </button>\n      );\n    }\n  }\n  /**\n   * Renders the table in the display page. This calls _get_table_header and _get_table_body\n   *\n   * @return An a table displaying the state queryset set objects\n   */\n\n  render_table() {\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr key=\"header\">\n            {this.show_check_list() ? (\n              <th>\n                <input\n                  type=\"checkbox\"\n                  id=\"all_boxes\"\n                  onChange={this._select_all}\n                  ref={this._check_all}\n                />{\" \"}\n                <label htmlFor=\"all_boxes\">&nbsp;</label>\n              </th>\n            ) : null}\n            {this._get_table_header()}\n          </tr>\n        </thead>\n        <tbody>{this._get_table_body()}</tbody>\n      </table>\n    );\n  }\n  /**\n   * An event listener that listens to actions selected.\n   *\n   *@param {object} event -  the DOM on-change event\n   */\n\n  action_selected(event) {\n    let action = event.target.value;\n\n    //console.log(this.state.selected_objects.getItems());\n    this.get_actions()[action](this.state.selected_objects.getItems());\n    this.get_queryset(this.state.page_number, this.get_list_per_page());\n  }\n\n  /**\n   * Calls get_queryset for a new page number\n   *\n   */\n\n  _refresh_queryset() {\n    this.setState({\n      queryset: this.get_queryset(\n        this.state.page_number,\n        this.get_list_per_page(),\n        this.state.queryset\n      )\n    });\n  }\n  /**\n   * An event listener that listens when a page is  selected. Only fetch a new queryset set\n   * if fetch_for_page is true, else ignore. Setting fetch_for_page to false allows frontend\n   * pagination\n   *\n   *@param {number} page -  the page number selected\n   */\n\n  selectPage(page) {\n    return event => {\n      this.setState(\n        { page_number: page.page },\n        this.fetch_for_page ? this._refresh_queryset : () => {}\n      );\n      event.preventDefault();\n    };\n  }\n  /**\n   * An event listener that listens when the next page is  selected.\n   *\n   */\n\n  nextPage() {\n    this.setState({\n      page_number: Math.min(this.state.page_number + 1, this.state.total)\n    });\n  }\n  /**\n   * An event listener that listens when the previous page is  selected.\n   *\n   */\n\n  prevPage() {\n    this.setState({ page_number: Math.max(this.state.page_number - 1, 1) });\n  }\n  /**\n   * Renders the pagination UI\n   *\n   * @return A component that renders the pagination controls\n   */\n\n  render_pagination() {\n    let pages = [];\n    if (this.state.total) {\n      let numpages = Math.ceil(this.state.total / this.get_list_per_page());\n      let pages_in_pagination =\n        numpages < this.pages_in_pagination\n          ? numpages\n          : this.pages_in_pagination;\n\n      if (this.state.page_number == 1) {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(i + 1);\n        }\n      } else if (this.state.page_number == numpages) {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(numpages - i);\n        }\n      } else {\n        for (let i = 0; i < pages_in_pagination; i++) {\n          pages.push(this.state.page_number + i);\n        }\n      }\n      /*\n\t\tfor(var i=0;i<numpages;i++)\n\t    {\n\t\tpages.push(i+1);\n\n\t    }*/\n    }\n\n    return (\n      <div className=\"pull-right\">\n        <span className=\"summary\">\n          {this.get_list_per_page() * (this.state.page_number - 1) + 1}-\n          {Math.min(\n            this.get_list_per_page() * (this.state.page_number - 1) +\n              this.get_list_per_page(),\n            this.state.total\n          )}{\" \"}\n          of {this.state.total}{\" \"}\n        </span>\n\n        <nav aria-label=\"Page navigation\">\n          <ul className=\"pagination\">\n            <li key={\"left\"} className=\"page-item\">\n              <a\n                href=\"#\"\n                aria-label=\"Previous\"\n                onClick={this.prevPage.bind(this)}\n                className=\"page-link\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </a>\n            </li>\n\n            {pages.map(page => {\n              return (\n                <li key={page} className=\"page-item\">\n                  <a\n                    href=\"#\"\n                    className=\"page-link\"\n                    onClick={this.selectPage({ page })}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n            <li className=\"page-item\">\n              <a\n                href=\"#\"\n                key={\"right\"}\n                onClick={this.nextPage.bind(this)}\n                aria-label=\"Next\"\n                className=\"page-link\"\n              >\n                <span aria-hidden=\"true\">&raquo;</span>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n  /**\n   * Renders the actions select component\n   *\n   * @return A component that renders a select input for all actions in the list display page\n   */\n\n  render_actions() {\n    return (\n      <select\n        className=\"ra-action-button\"\n        onChange={this.action_selected.bind(this)}\n        defaultValue=\"\"\n      >\n        <option key=\"key\" value=\"\" disabled={true}>\n          Choose an action\n        </option>\n        {_.keys(this.get_actions()).map(action => {\n          return (\n            <option key={action} value={action}>\n              {\" \"}\n              {_.startCase(action)}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n  /**\n   * Renders the back button component in the add/change view\n   * @ignore\n   * @return A component that renders a back button\n   */\n\n  render_back_button() {\n    return (\n      <div>\n        <button\n          className={\"ra-back-button\"}\n          onClick={() => {\n            this.setState({ display_type: display_type.list, object: null });\n            this.get_queryset(\n              this.state.page_number,\n              this.get_list_per_page(),\n              this.state.queryset\n            );\n          }}\n        >\n          {\" \"}\n          Back{\" \"}\n        </button>\n      </div>\n    );\n  }\n  render_clear_button() {\n    return (\n      <button className={\"ra-clear-button\"} onClick={this._clear}>\n        Clear\n      </button>\n    );\n  }\n\n  /**\n   * Renders the admin interface component\n   *\n   * @return A component that renders the admin interface\n   */\n  render_list_view() {\n    return (\n      <div>\n        {this.render_add_button()}\n        {this.render_clear_button()}\n        {this.render_below_add_button()}\n        {this.render_search_field()}\n        {this.render_below_search_field()}\n        {this.render_actions()}\n        {this.render_below_actions()}\n        {this.render_filters()}\n        {this.render_below_filters()}\n\n        {this.render_table()}\n        {this.render_below_table()}\n        {this.render_progress(this.state.loading)}\n        {this.render_below_progress()}\n\n        {this.render_pagination()}\n      </div>\n    );\n  }\n  render_below_add_button() {}\n  render_below_search_field() {}\n\n  render_below_actions() {}\n\n  render_below_filters() {}\n\n  render_below_table() {}\n\n  render_below_progress() {}\n\n  render_change_view() {\n    return (\n      <div>\n        {this.render_progress(this.state.loading)}\n        {this.render_back_button()}\n        {this.get_form(this.state.object)}\n      </div>\n    );\n  }\n  render_above_change_view() {}\n  render_below_change_view() {}\n  render_above_list_view() {}\n  render_below_list_view() {}\n  render_list_page() {\n    return (\n      <div>\n        {this.render_above_list_view()}\n        {this.render_list_view()}\n        {this.render_below_list_view()}\n        {this.render_change_modal()}\n      </div>\n    );\n  }\n\n  render_change_modal() {\n    return (\n      <Modal\n        isOpen={this.state.display_type != display_type.list}\n        contentLabel={this.name || \"\"}\n        parentSelector={() => document.querySelector(\"#react-crud-admin\")}\n        styles={customStyles}\n      >\n        {this.render_above_change_view()}\n        {this.render_change_view()}\n        {this.render_below_change_view()}\n      </Modal>\n    );\n  }\n  render_permission_denied() {\n    return (\n      <div>\n        {\" \"}\n        <h1> Permission Denied </h1>\n      </div>\n    );\n  }\n  render() {\n    if (!this.has_module_permission()) {\n      return this.render_permission_denied();\n    }\n\n    return <div id=\"react-crud-admin\">{this.render_list_page()}</div>;\n  }\n  show_list_view() {\n    this._display_will_change();\n    this.setState({ display_type: display_type.list }, this._display_changed);\n  }\n  show_check_list() {\n    return true;\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}